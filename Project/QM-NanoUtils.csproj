<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net48</TargetFramework>
    <RootNamespace>QM_NanoUtils</RootNamespace>
    <AssemblyName>QM_NanoUtils</AssemblyName>
    <Version>1.0.0</Version>
    <LangVersion>latest</LangVersion>
    <SignAssembly>False</SignAssembly>
    <Company>Crynano</Company>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>
  <PropertyGroup>
    <GAME_PATH>D:\SteamLibrary\steamapps\common\Quasimorph</GAME_PATH>
    <GAME_NAME>Quasimorph</GAME_NAME>
    <SteamId>3357589185</SteamId>
  </PropertyGroup>
  <PropertyGroup>
    <GAME_PATH Condition="!Exists('$(GAME_PATH)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App $(GAME_STEAM_ID)', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GAME_PATH>
    <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
    <GAME_PATH Condition="!Exists('$(GAME_PATH)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\$(GAME_NAME)</GAME_PATH>
    <GAME_PATH Condition="!Exists('$(GAME_PATH)')">C:\Program Files\Steam\steamapps\common\$(GAME_NAME)</GAME_PATH>
    <GAME_PATH Condition="!Exists('$(GAME_PATH)')">C:\Program Files (x86)\Steam\steamapps\common\$(GAME_NAME)</GAME_PATH>
  </PropertyGroup>
  <PropertyGroup>
    <WorkshopPath>$(GAME_PATH)\..\..\workshop\content\2059170\$(SteamId)\</WorkshopPath>
    <ManagedPath>$(GAME_PATH)\$(GAME_NAME)_Data\Managed\</ManagedPath>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Assembly-CSharp" publicize="true">
      <HintPath>$(ManagedPath)Assembly-CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedPath)UnityEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedPath)UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>D:\SteamLibrary\steamapps\common\Quasimorph\Quasimorph_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Remove="packages\**" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="packages\**" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Remove="packages\**" />
  </ItemGroup>
  <PropertyGroup>
<!--    <AssemblyVersion>$(VersionPrefix)</AssemblyVersion>-->
    <PackageFolder>$(ProjectDir)../package/</PackageFolder>
  </PropertyGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <WorkshopSourceFile Include="$(WorkshopPath)*.*" />
      <PackageRemoveFiles Include="$(PackageFolder)$(TargetName)/*.pdb" />
    </ItemGroup>
    <Exec Command="@echo off&#xA;set deployDir=&quot;$(WorkshopPath)&quot;&#xA;&#xA;xcopy /f /y &quot;../modmanifest.json&quot; &quot;$(TargetDir)&quot;&#xA;&#xA;if '$(SteamId)'=='' (echo SteamId in project not set.  Aborting Workshop Deployment &amp;&amp; exit)&#xA;echo deploying to %25deployDir%25&#xA;&#xA;mkdir &quot;$(WorkshopPath)&quot;&#xA;&#xA;xcopy /f /y &quot;$(ProjectDir)../media/thumbnail.png&quot; %25deployDir%25&#xA;xcopy /f /y &quot;$(ProjectDir)../modmanifest.json&quot; %25deployDir%25&#xA;&#xA;xcopy /f /y   &quot;$(TargetDir)$(TargetName).*&quot; %25deployDir%25&#xA;&#xA;&#xA;" />
  </Target>
  <Target Condition="'$(SteamId)'!=''" Name="PostBuildPackage" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <WorkshopSourceFile Include="$(WorkshopPath)*.*" />
      <PackageRemoveFiles Include="$(PackageFolder)$(TargetName)/*.pdb" />
    </ItemGroup>

    <Message Text="---------- Creating Package: $(PackageFolder)$(TargetName)/*.pdb" Importance="high" />
    <RemoveDir Directories="$(PackageFolder)" />
    <Copy SourceFiles="@(WorkshopSourceFile)" DestinationFolder="$(PackageFolder)$(TargetName)"></Copy>
    <Delete Files="@(PackageRemoveFiles)" />
    <ZipDirectory SourceDirectory="$(PackageFolder)" DestinationFile="$(PackageFolder)../$(TargetName).zip" Overwrite="true" />
  </Target>
</Project>